{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["import createRequire from 'create-require';\nimport pkgDir from 'pkg-dir';\n\n/**\n * @param {string} path\n */\nconst resolvePath = (path) => {\n\tconst resolvedPath = (\n\t\tglobalThis.require ?? createRequire(import.meta.url)\n\t).resolve(path);\n\tif (!path.includes('./')) {\n\t\tconst directory = pkgDir.sync(resolvedPath) ?? '';\n\t\treturn directory;\n\t}\n\treturn resolvedPath;\n};\n\nconst assert = resolvePath('assert/');\nconst buffer = resolvePath('buffer/');\nconst child_process = resolvePath('./mock/empty.js');\nconst cluster = resolvePath('./mock/empty.js');\nconst _console = resolvePath('console-browserify');\nconst constants = resolvePath('constants-browserify');\nconst crypto = resolvePath('crypto-browserify');\nconst dgram = resolvePath('./mock/empty.js');\nconst dns = resolvePath('./mock/empty.js');\nconst domain = resolvePath('domain-browser');\nconst events = resolvePath('events/');\nconst fs = resolvePath('./mock/empty.js');\nconst http = resolvePath('stream-http');\nconst https = resolvePath('https-browserify');\nconst http2 = resolvePath('./mock/empty.js');\nconst _module = resolvePath('./mock/empty.js');\nconst net = resolvePath('./mock/empty.js');\nconst os = resolvePath('os-browserify/browser.js');\nconst path = resolvePath('path-browserify');\nconst punycode = resolvePath('punycode/');\nconst _process = resolvePath('process/browser.js');\nconst querystring = resolvePath('./proxy/querystring.js');\nconst readline = resolvePath('./mock/empty.js');\nconst repl = resolvePath('./mock/empty.js');\nconst stream = resolvePath('stream-browserify');\nconst _stream_duplex = resolvePath('readable-stream/lib/_stream_duplex.js');\nconst _stream_passthrough = resolvePath(\n\t'readable-stream/lib/_stream_passthrough.js'\n);\nconst _stream_readable = resolvePath('readable-stream/lib/_stream_readable.js');\nconst _stream_transform = resolvePath(\n\t'readable-stream/lib/_stream_transform.js'\n);\nconst _stream_writable = resolvePath('readable-stream/lib/_stream_writable.js');\nconst string_decoder = resolvePath('string_decoder/');\nconst sys = resolvePath('util/util.js');\nconst timers = resolvePath('timers-browserify');\nconst timersPromises = resolvePath('isomorphic-timers-promises');\nconst tls = resolvePath('./mock/empty.js');\nconst tty = resolvePath('tty-browserify');\nconst url = resolvePath('./proxy/url.js');\nconst util = resolvePath('util/util.js');\nconst vm = resolvePath('vm-browserify');\nconst zlib = resolvePath('browserify-zlib');\n\nconst packages = {\n\tassert,\n\tbuffer,\n\tchild_process,\n\tcluster,\n\tconsole: _console,\n\tconstants,\n\tcrypto,\n\tdgram,\n\tdns,\n\tdomain,\n\tevents,\n\tfs,\n\thttp,\n\thttps,\n\thttp2,\n\tmodule: _module,\n\tnet,\n\tos,\n\tpath,\n\tpunycode,\n\tprocess: _process,\n\tquerystring,\n\treadline,\n\trepl,\n\tstream,\n\t_stream_duplex,\n\t_stream_passthrough,\n\t_stream_readable,\n\t_stream_transform,\n\t_stream_writable,\n\tstring_decoder,\n\tsys,\n\t'timers/promises': timersPromises,\n\ttimers,\n\ttls,\n\ttty,\n\turl,\n\tutil,\n\tvm,\n\tzlib\n};\n\n/** @typedef {typeof packages} Packages */\n/** @typedef {keyof Packages} PackageNames */\n/** @typedef {{ [Property in PackageNames as `node:${Property}`]: Packages[Property] }} NodeProtocolPackages */\n\nconst packagesWithNodeProtocol = /** @type NodeProtocolPackages */ ({});\nfor (const [packageName, packagePath] of Object.entries(packages)) {\n\tpackagesWithNodeProtocol[\n\t\t`node:${/** @type PackageNames */ (packageName)}`\n\t] = /** @type PackageNames */ packagePath;\n}\n\nexport default {\n\t...packages,\n\t...packagesWithNodeProtocol\n};\n"],"names":["resolvePath","path","resolvedPath","require","createRequire","import","meta","url","resolve","includes","directory","pkgDir","sync","assert","buffer","child_process","cluster","_console","constants","crypto","dgram","dns","domain","events","fs","http","https","http2","_module","net","os","punycode","_process","querystring","readline","repl","stream","_stream_duplex","_stream_passthrough","_stream_readable","_stream_transform","_stream_writable","string_decoder","sys","timers","timersPromises","tls","tty","util","vm","zlib","packages","console","module","process","packagesWithNodeProtocol","packageName","packagePath","Object","entries"],"mappings":"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"}