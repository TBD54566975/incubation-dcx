{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["import createRequire from 'create-require';\nimport pkgDir from 'pkg-dir';\n\n/**\n * @param {string} path\n */\nconst resolvePath = (path) => {\n\tconst resolvedPath = (\n\t\tglobalThis.require ?? createRequire(import.meta.url)\n\t).resolve(path);\n\tif (!path.includes('./')) {\n\t\tconst directory = pkgDir.sync(resolvedPath) ?? '';\n\t\treturn directory;\n\t}\n\treturn resolvedPath;\n};\n\nconst assert = resolvePath('assert/');\nconst buffer = resolvePath('buffer/');\nconst child_process = resolvePath('./mock/empty.js');\nconst cluster = resolvePath('./mock/empty.js');\nconst _console = resolvePath('console-browserify');\nconst constants = resolvePath('constants-browserify');\nconst crypto = resolvePath('crypto-browserify');\nconst dgram = resolvePath('./mock/empty.js');\nconst dns = resolvePath('./mock/empty.js');\nconst domain = resolvePath('domain-browser');\nconst events = resolvePath('events/');\nconst fs = resolvePath('./mock/empty.js');\nconst http = resolvePath('stream-http');\nconst https = resolvePath('https-browserify');\nconst http2 = resolvePath('./mock/empty.js');\nconst _module = resolvePath('./mock/empty.js');\nconst net = resolvePath('./mock/empty.js');\nconst os = resolvePath('os-browserify/browser.js');\nconst path = resolvePath('path-browserify');\nconst punycode = resolvePath('punycode/');\nconst _process = resolvePath('process/browser.js');\nconst querystring = resolvePath('./proxy/querystring.js');\nconst readline = resolvePath('./mock/empty.js');\nconst repl = resolvePath('./mock/empty.js');\nconst stream = resolvePath('stream-browserify');\nconst _stream_duplex = resolvePath('readable-stream/lib/_stream_duplex.js');\nconst _stream_passthrough = resolvePath(\n\t'readable-stream/lib/_stream_passthrough.js'\n);\nconst _stream_readable = resolvePath('readable-stream/lib/_stream_readable.js');\nconst _stream_transform = resolvePath(\n\t'readable-stream/lib/_stream_transform.js'\n);\nconst _stream_writable = resolvePath('readable-stream/lib/_stream_writable.js');\nconst string_decoder = resolvePath('string_decoder/');\nconst sys = resolvePath('util/util.js');\nconst timers = resolvePath('timers-browserify');\nconst timersPromises = resolvePath('isomorphic-timers-promises');\nconst tls = resolvePath('./mock/empty.js');\nconst tty = resolvePath('tty-browserify');\nconst url = resolvePath('./proxy/url.js');\nconst util = resolvePath('util/util.js');\nconst vm = resolvePath('vm-browserify');\nconst zlib = resolvePath('browserify-zlib');\n\nconst packages = {\n\tassert,\n\tbuffer,\n\tchild_process,\n\tcluster,\n\tconsole: _console,\n\tconstants,\n\tcrypto,\n\tdgram,\n\tdns,\n\tdomain,\n\tevents,\n\tfs,\n\thttp,\n\thttps,\n\thttp2,\n\tmodule: _module,\n\tnet,\n\tos,\n\tpath,\n\tpunycode,\n\tprocess: _process,\n\tquerystring,\n\treadline,\n\trepl,\n\tstream,\n\t_stream_duplex,\n\t_stream_passthrough,\n\t_stream_readable,\n\t_stream_transform,\n\t_stream_writable,\n\tstring_decoder,\n\tsys,\n\t'timers/promises': timersPromises,\n\ttimers,\n\ttls,\n\ttty,\n\turl,\n\tutil,\n\tvm,\n\tzlib\n};\n\n/** @typedef {typeof packages} Packages */\n/** @typedef {keyof Packages} PackageNames */\n/** @typedef {{ [Property in PackageNames as `node:${Property}`]: Packages[Property] }} NodeProtocolPackages */\n\nconst packagesWithNodeProtocol = /** @type NodeProtocolPackages */ ({});\nfor (const [packageName, packagePath] of Object.entries(packages)) {\n\tpackagesWithNodeProtocol[\n\t\t`node:${/** @type PackageNames */ (packageName)}`\n\t] = /** @type PackageNames */ packagePath;\n}\n\nexport default {\n\t...packages,\n\t...packagesWithNodeProtocol\n};\n"],"names":["resolvePath","path","resolvedPath","require","createRequire","import","resolve","includes","directory","pkgDir","sync","assert","buffer","child_process","cluster","_console","constants","crypto","dgram","dns","domain","events","fs","http","https","http2","_module","net","os","punycode","_process","querystring","readline","repl","stream","_stream_duplex","_stream_passthrough","_stream_readable","_stream_transform","_stream_writable","string_decoder","sys","timers","timersPromises","tls","tty","url","util","vm","zlib","packages","console","module","process","packagesWithNodeProtocol","packageName","packagePath","Object","entries"],"mappings":"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"}